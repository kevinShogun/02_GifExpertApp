{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAiB/C,OACC,sBAAMC,SAXc,SAACC,GACrBA,EAAEC,iBAEOJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMxB,SACC,uBACCO,KAAK,OACLC,YAAY,sBACZC,MAAOV,EACPW,SApBuB,SAACR,GAC1BF,EAAcE,EAAES,OAAOF,a,+BCNZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE4BC,UAAUH,GAFtC,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCYLO,EAXK,SAACC,GAEjB,OACI,sBAAKC,UAAU,4DAAf,UACI,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAKH,EAAMJ,QAChC,4BAAII,EAAMJ,YCHTQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACdf,mBAAS,CAClCsB,KAAM,GACNc,SAAS,IAH8B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACTzB,EAAQC,GAAUyB,MAAK,SAACC,GACtBH,EAAS,CACRhB,KAAMmB,EACNL,SAAS,SAIV,CAACrB,IAEGsB,EDb6BK,CAAY3B,GAA/Ba,EAFuB,EAE7BN,KAAcc,EAFe,EAEfA,QAEzB,OACC,qCACC,oBAAIJ,UAAU,8CAAd,SAA6DjB,IACnDqB,GAAW,oBAAIJ,UAAU,wCAAd,qBACnB,qBAAKA,UAAU,YAAf,SACAJ,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEWZiB,EArBM,WAAO,IAAD,EACU3C,mBAAS,CAAC,cADpB,mBACnB4C,EADmB,KACP7C,EADO,KAM1B,OACC,qCACC,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACE6C,EAAWpB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCbnB8B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.add1690a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Digite la categoria\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (category) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Fmyizh748gf9MxxU17aObgKers1Jfz9K`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nconst GifGridItem = (props) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__flipInX animate__delay-1s'>\r\n            <img src={props.url} alt={props.title} />\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGridItem\r\n","import React /* { useEffect, useState } */ from \"react\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading} = useFetchGif(category); \r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='animate__animated animate__lightSpeedInLeft'>{category}</h3>\r\n            {loading && <h4 className='animate__animated animate__backInDown'>Loading</h4>}\r\n\t\t\t  <div className=\"card-grid\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div> \r\n\t\t</>\r\n\t);\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState([\"DC Heroes\"]);\r\n\t/* const handleAdd = () =>{\r\n        setCategories( ['Caballeros de Zodiaco', ...categories] );\r\n    } */\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n  <GifExpertApp/>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}